#BlueJ class context
comment0.params=quantity\ maxValue
comment0.target=Sorter(int,\ int)
comment0.text=\r\n\ Constructor\ for\ sorter\r\n\ \r\n\ @param\ quantity\ the\ number\ of\ items\ to\ create\r\n\ @param\ maxValue\ the\ upperBound\ for\ the\ values\ of\ the\ items\r\n\ @throws\ IllegalArgumentException\ if\ quantity\ or\ maxValue\ are\ invalid\ values\r\n
comment1.params=
comment1.target=Item[]\ getItems()
comment1.text=\r\n\ returns\ items\ array\r\n\ \r\n\ @return\ items\ array\r\n
comment2.params=
comment2.target=int\ getQuantity()
comment2.text=\r\n\ returns\ number\ of\ items\ in\ items\ array\r\n\ \r\n\ @return\ number\ of\ items\ in\ items\ array\r\n
comment3.params=
comment3.target=int\ getMaxValue()
comment3.text=\r\n\ returns\ max\ value\ of\ items\r\n\ \r\n\ @return\ max\ value\ of\ items\ in\ items\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ returns\ a\ String\ representation\ of\ the\ item\ array\ in\ the\ form\ of\ a\ String\ representation\ of\ each\ item\ followed\ by\ a\ new\ line\ character\ with\ the\ exception\ of\ the\ last\ item\r\n\ \r\n\ @return\ String\ representation\ of\ the\ item\ array\r\n
comment5.params=
comment5.target=void\ sort()
comment5.text=\r\n\ Sort\ the\ items\ array\ using\ the\ method\ described\ by\ the\ class\r\n
comment6.params=gui
comment6.target=void\ sort(GUI)
comment6.text=\r\n\ Sort\ the\ items\ array\ using\ the\ method\ described\ by\ the\ class\ and\ updates\ the\ corrisponding\ GUI\ object\r\n\ \r\n\ @param\ gui\ GUI\ to\ update\r\n
comment7.params=
comment7.target=void\ shuffle()
comment7.text=\r\n\ Shuffles\ items\ array\ using\ the\ Fisher-Yates\ algorithm\r\n
comment8.params=gui
comment8.target=void\ shuffle(GUI)
comment8.text=\r\n\ Shuffles\ items\ array\ using\ the\ Fisher-Yates\ algorithm\ and\ updates\ the\ corrisponding\ GUI\r\n\ \r\n\ @param\ gui\ GUI\ to\ update\r\n
comment9.params=index\ newIndex
comment9.target=void\ move(int,\ int)
comment9.text=\r\n\ moves\ an\ item\ in\ the\ array\ from\ index\ to\ newIndex,\ objects\ as\ needed\r\n\ \r\n\ @param\ index\ index\ of\ item\ to\ move\r\n\ @param\ newIndex\ index\ to\ move\ item\ to\r\n\ @throws\ ArrayIndexOutOfBoundsException\ if\ either\ index\ or\ newIndex\ are\ invalid\ indexes\r\n
numComments=10
